---
title: 'Case Study: Bike Sharing'
author: "Daniel Amos O."
date: '2022-03-22'
output:
  pdf_document: default
  html_document: default
---

```{r setup, include=FALSE}
options(repos = list(CRAN="http://cran.rstudio.com/"))
knitr::opts_chunk$set(echo = TRUE)
```

## Case Study: How Does a Bike-Share Navigate Speedy Success?
### Scenario
I'm a junior data analyst working in the marketing analyst team at Cyclistic, a bike-share company in Chicago. The director of marketing believes the company’s future success depends on maximizing the number of annual memberships. Therefore, your team wants to understand how casual riders and annual members use Cyclistic bikes differently. From these insights, your team will design a new marketing strategy to convert casual riders into annual members. But first, Cyclistic executives must approve your recommendations, so they must be backed up with compelling data insights and professional data visualizations.


# Ask:
Three questions will guide the future marketing program:
1. How do annual members and casual riders use Cyclistic bikes differently?
2. Why would casual riders buy Cyclistic annual memberships?
3. How can Cyclistic use digital media to influence casual riders to become members?
We will be using R for our analysis to get a variety of insights.

### Business Task:
Analyze user behaviors between annual members and casual riders. Make recommendations regarding how to convert casual riders into annual members.

### Set up Environment
Simplify working directory to make data calls easier and fast
Load the required libraries 'tidyverse', 'lubridate', 'dplyr'
```{r, results= FALSE}
library(tidyverse) #for data cleaning
library(lubridate) #helps to wrangle date attribute
install.packages("skimr") #to get the summary data
install.packages("janitor")
library(skimr) #to get the summary data
library(janitor)
library(dplyr)
```
# Prepare:

### Step 1: Download all the datasets needed for this project. I will be using 12 datasets from Jan_2021 to Dec_2021
I used the Cyclistic’s historical trip data that is made available by Motivate International Inc. to analyze and identify trends. I downloaded trip data between Jan 2021 to Dec 2021. You can access the datasets here [link] (https://divvy-tripdata.s3.amazonaws.com/index.html). It is a public datasets provided by Motivate International Inc.
I download the the files on the main directory.

I saved the 12 downloaded files and unzipped into a folder on my desktop and used appropriate file-naming conventions for easy referencing. Now i imported my 12 datasets into   Rstudio by running the codes below to import the .csv datasets I imported each file to the R studio to check for data integrity, missing information and incorrect values. The only null values were in the starting and ending station id/name columns.

```{r,results= FALSE}
Trips_dec <- read_csv("202112-divvy-tripdata.csv")
Trips_jan <- read_csv("202101-divvy-tripdata.csv")
Trips_feb <- read_csv("202102-divvy-tripdata.csv")
Trips_mar <- read_csv("202103-divvy-tripdata.csv")
Trips_apr <- read_csv("202104-divvy-tripdata.csv")
Trips_may <- read_csv("202105-divvy-tripdata.csv")
Trips_jun <- read_csv("202106-divvy-tripdata.csv")
Trips_jul <- read_csv("202107-divvy-tripdata.csv")
Trips_aug <- read_csv("202108-divvy-tripdata.csv")
Trips_sep <- read_csv("202109-divvy-tripdata.csv")
Trips_oct <- read_csv("202110-divvy-tripdata.csv")
Trips_nov <- read_csv("202111-divvy-tripdata.csv")
```
The R programming language was the tool of choice to process this data. Each file had a consistent format regarding column names, column order, etc. by using the codes below
```{r}
spec(Trips_jan)
spec(Trips_feb)
spec(Trips_mar)
spec(Trips_apr)
spec(Trips_may)
spec(Trips_jun)
spec(Trips_jul)
spec(Trips_aug)
spec(Trips_sep)
spec(Trips_oct)
spec(Trips_nov)
spec(Trips_dec)
```
I checked the data columns for name consistency this will aid the combining of the various data files into one to further my cleaning and analysis
```{r}
colnames(Trips_jan)
colnames(Trips_feb)
colnames(Trips_mar)
colnames(Trips_apr)
colnames(Trips_may)
colnames(Trips_jul)
colnames(Trips_jun)
colnames(Trips_aug)
colnames(Trips_sep)
colnames(Trips_oct)
colnames(Trips_nov)
```
Compare the dataframes 
```{r}
compare_df_cols(Trips_jan, Trips_feb, Trips_mar, Trips_apr, Trips_may, Trips_jun, Trips_jul, Trips_aug, Trips_sep, Trips_oct, Trips_nov, Trips_dec, return = "mismatch")
```
### Combine the dataframes together
Combines the dataframes together assigning it to a variable all_trips
```{r}
all_trips <- bind_rows(Trips_jan, Trips_feb, Trips_mar, Trips_apr, Trips_may, Trips_jun, Trips_jul, Trips_aug, Trips_sep, Trips_oct, Trips_nov, Trips_dec)
```
Check the first few rows of all_trips
```{r}
head(all_trips)
```
# Process
## Exploring the data 
### Removing unused columns
I proceed to removing the columns i wont be needing for the analysis, first check the column names
```{r}
colnames(all_trips)
```
Proceed to removing the unused columns
```{r}
all_trips <- all_trips %>%
  select(-c(start_lat,start_lng, end_lng, end_lat))
```
inspect the colnames of the combined data all_trips
```{r}
colnames(all_trips)
```
I will use skim function to get summary of the data and check for missing data
```{r}
skim(all_trips)
```
I will be doing a proper calculations, our interest lies on how much time each ride takes, and time analysis on month and days of the week. By adding columns for date list of month, day, and year of each ride
The default format is yyyymm-dd
```{r, results= FALSE}
all_trips$date <- as.Date(all_trips$started_at)
all_trips$month <- format(as.Date(all_trips$date), "%m")
all_trips$day <- format(as.Date(all_trips$date), "%d")
all_trips$year <- format(as.Date(all_trips$date), "%y")
all_trips$day_of_week <- format(as.Date(all_trips$date), "%A")
```
### Add ride_length calculation
Add ride_length calculation to all_trips(in_seconds) using the difftime() to calculate the time difference between dates
```{r}
all_trips$ride_length <- difftime(all_trips$ended_at, all_trips$started_at)
```
### Convert "ride_length" from factor to numeric 
I convert the "ride_length" from factor to numeric to run calculations on the column
```{r}
is.factor(all_trips$ride_length)
all_trips$ride_length <- as.numeric(as.character(all_trips$ride_length))
is.numeric(all_trips$ride_length)
```
### Remove bad data
The all_trips dataframe includes entries when bikes were taken out of stations and ride_length was negative, skim to check for missing data and then remove such data 
```{r, results= FALSE}
skim(all_trips$ride_length)
all_trips_v2 <- all_trips[!(all_trips$ride_length<0),]
```
# Analyze
Conduct discriptive analysis on the ride_length in seconds (the mean, median, max, and min)
```{r}
mean(all_trips_v2$ride_length)
median(all_trips_v2$ride_length)
max(all_trips_v2$ride_length) 
min(all_trips_v2$ride_length)
```
### compare the memberships of the riders i.e member and casual
```{r}
aggregate(all_trips_v2$ride_length ~ all_trips_v2$member_casual, FUN =  mean)
aggregate(all_trips_v2$ride_length ~ all_trips_v2$member_casual, FUN = median)
aggregate(all_trips_v2$ride_length ~ all_trips_v2$member_casual, FUN = max)
aggregate(all_trips_v2$ride_length ~ all_trips_v2$member_casual, FUN = min)
```
We can see the average ride by each day of week by member casual users
```{r}
aggregate(all_trips_v2$ride_length ~ all_trips_v2$member_casual + all_trips_v2$day_of_week, FUN = mean)
```
Rearrange the average ride time by day of the week
```{r}
all_trips_v2$day_of_week <- ordered(all_trips_v2$day_of_week, levels=c("Sunday", "Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday"))
```
Check the first few rows of the all_trips_v2 data 
```{r}
head(all_trips_v2)
```
Since i want to know how annual members and casual riders use use the cyclistic bike differently i will analyze the cyclistic data all_trips_v2 by type and weekday using the mutate() using wday() to create weekday field, group by user type and weekday and calculate the number of rides and average duration
```{r}
all_trips_v2 %>%
  mutate(weekday = wday(started_at, label = TRUE)) %>%
  group_by(member_casual, weekday) %>%
  summarise(number_of_rides = n(),
            average_duration = mean(ride_length)) %>%
  arrange(member_casual, weekday)
```
# Share
I created some visualization in R using the ggplot2
## Visualizing my findings with the ggplot2 package
First load the gggplot2 package
```{r, results= FALSE}
library(ggplot2)
```
### visualize the number of rides per day by member_casual
#### fig 1
```{r}
all_trips_v2 %>%
  mutate(weekday = wday(started_at, label= TRUE)) %>% 
  group_by(member_casual, weekday) %>%   
  summarise(number_of_rides = n(),
            average_duration = mean(ride_length)) %>%   
  arrange(member_casual,weekday) %>%
  ggplot(aes(x= number_of_rides, y = weekday, fill = member_casual)) + 
  geom_col(position = "dodge") +
  labs(title = "Number of rides per day of week by member casual",
       subtitle = "Data from year 2021") +
  theme(plot.title = element_text(hjust = 0.4),
        plot.subtitle = element_text(hjust = 0.5))
```
### visualize the average ride duration per day of week by member casual
#### Fig 2
```{r}
all_trips_v2 %>%
  mutate(weekday = wday(started_at, label= TRUE)) %>% 
  group_by(member_casual, weekday) %>%   
  summarise(number_of_rides = n(),
            average_duration = mean(ride_length)) %>%   
  arrange(member_casual,weekday) %>%
  ggplot(aes(x= average_duration, y = weekday, fill = member_casual))+ 
  geom_col(position = "dodge") +
  labs(title = "Average duration of rides per day of week by member casual",
       subtitle = "Data from year 2021") +
  theme(plot.title = element_text(hjust = 0.5),
        plot.subtitle = element_text(hjust = 0.5))
```
### visualize number of rides by rider_type
#### Fig 3
```{r}
all_trips_v2 %>%
  group_by(member_casual, rideable_type) %>%   
  summarise(number_of_rides = n(),
            average_duration = mean(ride_length)) %>%   
  arrange(member_casual) %>%
  ggplot(aes(x= member_casual, y = number_of_rides, fill = rideable_type))+ 
  geom_col(position = "dodge") +
  labs(title = "Number of rides by rideable type and member casual",
       subtitle = "Data from year 2021") +
  theme(plot.title = element_text(hjust = 0.5),
        plot.subtitle = element_text(hjust = 0.5))
```
### visualize the average ride duration by rider type on rideable type
#### Fig 4
```{r}
all_trips_v2 %>%
  group_by(member_casual, rideable_type) %>%   
  summarise(number_of_rides = n(),
            average_duration = mean(ride_length)) %>%   
  arrange(member_casual) %>%
  ggplot(aes(x= member_casual, y = average_duration, fill = rideable_type))+ 
  geom_col(position = "dodge") +
  labs(title = "Average ride duration by member casual and rideable type",
       subtitle = "Data from year 2021") +
  theme(plot.title = element_text(hjust = 0.5),
        plot.subtitle = element_text(hjust = 0.5))
```
### visualize the number of rides by each months
#### Fig 5
```{r}
all_trips_v2 %>%
  group_by(member_casual, month) %>%
  summarise(number_of_rides = n(),
            average_duration = mean(ride_length)) %>%
  arrange(member_casual, month) %>%
  ggplot(aes(x=month, y= number_of_rides, fill = member_casual)) +
  geom_col(position = "dodge") +
  labs(title = "Number of rides per month by member casual",
       subtitle = "Data from year 2021") +
  theme(plot.title = element_text(hjust = 0.5),
        plot.subtitle = element_text(hjust = 0.5))
```
### lets visualize the average duration for each month by rider_type
#### Fig 6
```{r}
all_trips_v2 %>%
  group_by(member_casual, month) %>%
  summarise(number_of_rides = n(),
            average_duration = mean(ride_length)) %>%
  arrange(member_casual, month) %>%
  ggplot(aes(x= month, y= average_duration, fill = member_casual)) +
  geom_col(position = "dodge") +
  labs(title = "Average duration of rides per month by member casual",
       subtitle = "Data from year 2021") +
  theme(plot.title = element_text(hjust = 0.5),
        plot.subtitle = element_text(hjust = 0.5))
```
### visualization total duration for each month
#### Fig 7
```{r}
all_trips_v2 %>%
  group_by(member_casual, month) %>%
  summarise(number_of_rides = n(),
            total_duration = sum(ride_length)) %>%
  arrange(member_casual, month) %>%
  ggplot(aes(x= month, y= total_duration, fill = member_casual)) + 
  geom_col(position = "dodge") +
  labs(title = "Total duration of rides by member casual per month",
       subtitle = "Data from year 2021") +
  theme(plot.title = element_text(hjust = 0.5),
        plot.subtitle = element_text(hjust = 0.5))
```
# Act
My task here in this final stage is to state my findings on the analysis and give recommendation to the marketing director and stakeholder
## Key finding/ summary
1. From fig 1, the number of rides per day of the week by member casual there is more number of rides by the annual membership during the week than casual riders who have more rides during the weekends(Saturday & Sunday).

2. From the plot of the average duration of rides per day of the week by member casual, the average duration of rides by casual riders for each day is greater than the average duration of rides by an annual member.

3. From figure 3, number of rides by rideable type and member casual, it can be observed that the casual riders prefer the classic and electric bike to the docked bike while the annual members prefer the classic bike to the electric and docked bike.

4. From fig 4, average ride duration by member casual and rideable type, it can be seen that casual riders who use the docked bike had the highest average ride duration while classic bike used by annual members have the highest average ride duration.

5. Plot of the total duration of rides by member casual per month there was more total duration of rides by casual riders for most months except January, February, November, and December.

## Recommendation
Based on my analysis here are my top 3 recommendation

1. The classic and electric bikes used by casual riders should be restricted to annual members-only, making the annual membership attractive to casual riders. From the number of rides by rideable type and member casual.

2. Reduce the ride duration by casual riders which in turn encourages annual membership sales since casual riders engage in longer ride duration( average duration of rides per month)

3. Launch a digital promotion and sales discount for an annual membership subscription to encourage more casual riders to purchase annual membership.---


